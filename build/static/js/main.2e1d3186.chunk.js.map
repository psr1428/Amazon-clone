{"version":3,"sources":["Stateprovider.js","GoogleLogout.js","firebase.js","CheckoutProd.js","Order.js","orders.js","Header.js","Product.js","Home.js","reducer.js","Subtotal.js","Checkout.js","GoogleLogin.js","RefreshTokenup.js","Login.js","axios.js","Payment.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Googlelogout","useHistory","clientId","buttonText","onLogoutSuccess","window","location","replace","console","log","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","CheckoutProd","basket","name","dispatch","arr","map","i","value0","image","title","value1","price","value2","rating","value3","id","className","src","alt","starDimension","onClick","type","Order","order","moment","unix","data","created","format","item","renderText","decimalScale","amount","displayType","thousandSeparator","prefix","Orders","user","useState","orders","setOrders","useEffect","collection","doc","email","orderBy","onSnapshot","snapshot","docs","Header","handleAuth","signOut","to","reload","length","Product","Home","width","height","images","url","getBasketTotal","reduce","state","action","index","findIndex","basketItem","newBasket","splice","warn","split","Subtotal","history","sum","a","b","e","push","Checkout","GoogleLogIn","buttobText","onSuccess","res","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","style","marginTop","isSignedIn","Login","setEmail","password","setPassword","onChange","target","placeholder","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","instance","axios","create","basURL","Payment","stripe","useStripe","elements","useElements","setError","disabled","setdisabled","processing","setProcessing","succeeded","setSucceeded","clientSecret","setClientSecret","method","response","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","set","empty","Promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e1d3186.chunk.js","sourcesContent":["import React,{createContext,useContext,useReducer} from 'react';\r\n\r\n//Prepares the data layer\r\nexport const StateContext=createContext();\r\n\r\n//Wrap our app and provide data layer to any component\r\nexport const StateProvider=({reducer,initialState,children})=>(\r\n\t<StateContext.Provider value={useReducer(reducer,initialState)}>\r\n         {children}\r\n\t</StateContext.Provider>\r\n);\r\n\r\n// pull or push data from the datalayer\r\nexport const useStateValue=()=>useContext(StateContext);","import React from 'react';\r\nimport {GoogleLogout} from 'react-google-login';\r\nimport {refreshTokenSetup} from './RefreshTokenup.js';\r\nimport  {BrowserRouter as Router,Link,Switch,Route,useHistory} from 'react-router-dom';\r\n\r\n\r\nconst clientId='275245150183-tgs5rega6rkc2qfp2u9mbsjodc6budua.apps.googleusercontent.com';\r\n\r\n\r\nfunction Googlelogout(){\r\n\tconst history=useHistory();\r\n    const onSuccess=()=>{\r\n        window.location.replace('/')\r\n        console.log(\"User Logged out\");\r\n       }\r\n   \r\n\treturn(\r\n        <div>\r\n         <GoogleLogout\r\n           clientId={clientId}\r\n           buttonText=\"Logout\"\r\n           onLogoutSuccess={onSuccess}\r\n           ></GoogleLogout>\r\n        </div>\r\n\t\t);\r\n}\r\n\r\nexport default Googlelogout;","import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApivTPnBnyGOlyzSEo7D4cEbdS7Qw_aLA\",\r\n  authDomain: \"clone1-4e27e.firebaseapp.com\",\r\n  databaseURL: \"https://clone1-4e27e.firebaseio.com\",\r\n  projectId: \"clone1-4e27e\",\r\n  storageBucket: \"clone1-4e27e.appspot.com\",\r\n  messagingSenderId: \"889550157625\",\r\n  appId: \"1:889550157625:web:40467e03f2fc1944d15ae8\",\r\n  measurementId: \"G-V3CCJ6WL0F\"\r\n};\r\n\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\r\n\r\nconst db=firebaseApp.firestore();\r\nconst auth=firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport {db,auth};","import React from 'react';\r\nimport {useStateValue} from './Stateprovider';\r\nimport StarRatings from 'react-star-ratings';\r\nimport './Checkout.css';\r\n\r\nfunction CheckoutProd(){\r\n    const [{basket,name},dispatch]=useStateValue();\r\n\tconst arr=basket.map(i=>({\r\n         value0:i.image,\r\n         value:i.title,\r\n         value1:i.price,\r\n         value2:i.rating,\r\n         value3:i.id\r\n\t}));\r\n    \r\n    function Removele(id){\r\n    \tconsole.log(id);\r\n        dispatch({\r\n        \ttype:'Remove-basket',\r\n        \tid:id\r\n        })\r\n    }\r\n    return(\r\n           <div>\r\n              <small><h5>Hello {name?name:'Guest'}</h5></small>\r\n             {arr.map(i=><div className=\"checkout-prod-image\">\r\n             \t<img className=\"checkout-images\" src={i.value0} alt=\"\"/>\r\n             \t<div className=\"checkout-prod-info\">\r\n                 <h3>{i.value}</h3>\r\n                 <h3><small>$</small>{i.value1}</h3>\r\n                 <StarRatings rating={i.value2} starDimension=\"20px\"/>\r\n                 <button onClick={()=>Removele(i.value3)}>Remove from basket</button>\r\n             \t </div>\r\n             \t</div>\r\n             \t)}\r\n\r\n          </div>\r\n    \t)\r\n}\r\n\r\nexport default CheckoutProd;","import React from 'react';\r\nimport moment from 'moment';\r\nimport CheckoutProd from './CheckoutProd.js';\r\nimport {useStateValue} from './Stateprovider';\r\nimport CurrencyFormat from \"react-currency-format\"\r\nimport StarRatings from 'react-star-ratings';\r\nimport './order.css'\r\n\r\nfunction Order({order}){\r\n  \r\n\r\n    return(\r\n     <div className=\"order\">\r\n        <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\r\n            <p className=\"order__id\">\r\n                <small>{order.id}</small>\r\n            </p>\r\n         {order.data.basket?.map(item => (\r\n         \t <div>\r\n             \t<img className=\"image\" src={item.image} alt=\"\"/>\r\n             \t<div className=\"checkout-prod-info\">\r\n                 <h3>{item.title}</h3>\r\n                 <h3><small>$</small>{item.price}</h3>\r\n                 <StarRatings rating={item.rating} starDimension=\"20px\"/>\r\n              </div>\r\n             </div> \r\n            ))}\r\n          <CurrencyFormat\r\n                renderText={(value) => (\r\n                    <h3 className=\"order__total\">Order Total: {value}</h3>\r\n                )}\r\n                decimalScale={2}\r\n                value={order.data.amount / 100}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />         \r\n      \r\n     </div>\r\n   \t)\r\n}\r\n\r\nexport default Order;","import React,{useState,useEffect} from 'react';\r\nimport {db} from './firebase';\r\nimport {useStateValue} from './Stateprovider.js';\r\nimport './orders.css';\r\nimport StarRatings from 'react-star-ratings';\r\nimport Order from './Order.js';\r\n\r\nfunction Orders(){\r\n    const[{basket,user},dispatch]=useStateValue();\r\n    const [orders,setOrders]=useState();\r\n \r\n\r\n    useEffect(()=>{\r\n       if(user){\r\n        db\r\n        .collection('users')\r\n        .doc(user?.email)\r\n        .collection('orders')\r\n        .orderBy('created','desc')\r\n        .onSnapshot(snapshot => (\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        ))\r\n       }\r\n       else{\r\n         setOrders([])\r\n       }\r\n    },[user])\r\n\r\n    return(\r\n       <div className=\"order\">\r\n         <h1>Your Orders</h1>\r\n         <div className=\"order-container\">\r\n             {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n           </div> \r\n       </div>\r\n        )\r\n}\r\n\r\nexport default Orders;","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport  {BrowserRouter as Router,Link,Switch,Route,useHistory} from 'react-router-dom';\r\nimport {useStateValue} from './Stateprovider';\r\nimport Googlelogout from './GoogleLogout.js';\r\nimport {auth} from './firebase';\r\nimport Orders from './orders';\r\n\r\nfunction Header(){\r\n\tconst [{basket,name,user},dispatch]=useStateValue();\r\n    const history=useHistory();\r\n\r\n\tconst handleAuth=()=>{\r\n          if(user){\r\n          \tauth.signOut();    \t\r\n          }\r\n\t}\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\treturn(\r\n\t\t<div className='header'>\r\n\t\t  <Link to=\"/\">\r\n              <img className=\"header-logo\" src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"/>\r\n\t\t  </Link>\r\n          \r\n\t\t   <div className=\"header-search\">\r\n             <input className=\"header-search_Input\" type=\"text\"/>\r\n\t\t     <SearchIcon className=\"header_searchIcon\"/>\r\n\t\t   </div>\r\n\t\t   <div className=\"header-nav\">\r\n\t\t     <Link to='/Login'>\r\n              <div onClick={handleAuth} className=\"header-option\">\r\n               <span className=\"header-optionInspanOne\">\r\n                Hello {user?name:'Guest'}</span>\r\n                <span className=\"header-optionInspanTwo\">\r\n                {(user)?(<div onClick={refreshPage}>SignOut</div>\r\n                ):'SignIn'}</span>\r\n              </div>\r\n             </Link>\r\n            <Link to=\"/orders\">  \r\n             <div className=\"header-option\">\r\n               <span className=\"header-optionInspanOne\">\r\n                 Returns</span>\r\n                <span className=\"header-optionInspanTwo\">\r\n                Orders</span>\r\n             </div>\r\n            </Link> \r\n            \r\n             <div className=\"header-option\">\r\n                 <span className=\"header-optionInspanOne\">\r\n               Your</span>\r\n                <span className=\"header-optionInspanTwo\">\r\n                Prime</span>\r\n             </div>\r\n          \r\n             <Link to=\"/checkout\">\r\n             <div className=\"header-optionBasket\">\r\n                  <ShoppingBasketIcon/>\r\n                  <span className=\"header-optionInspanTwo header-basketcount\">\r\n                  {basket.length}\r\n                  </span>\r\n             </div>\r\n                </Link>\r\n                  <Googlelogout onClick={handleAuth}/>\r\n            <div>\r\n             </div>    \r\n\t\t   </div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Product.css';\r\nimport StarRating from 'react-star-ratings';\r\nimport {useStateValue} from './Stateprovider';\r\n\r\n\r\nfunction Product({title,image,price,rating,id}){\r\n\tconst [{basket},dispatch]=useStateValue();\r\n\r\n    const addTobasket=()=>{\r\n    \t//dispatch the item into data layer\r\n        dispatch({\r\n        \ttype:'ADD-TO-BASKET',\r\n        \titem:{\r\n        \t\tid:id,\r\n        \t\ttitle:title,\r\n        \t\timage:image,\r\n        \t\tprice:price,\r\n        \t\trating:rating,\r\n        \t\tid:id\r\n        \t}\r\n        });\r\n    }\r\n\r\n\treturn(\r\n       <div className=\"product\">\r\n          <div className=\"product-info\">\r\n            <p>{title}</p>\r\n            <p className=\"product-price\">\r\n              <small>$</small>\r\n              <strong>{price}</strong>\r\n            </p>\r\n            <div className=\"product-rating\">\r\n            <StarRating rating={rating} starDimension=\"20px\"/>\r\n             </div>\r\n          </div>\r\n          <img src={image} alt=\"\"/>\r\n          <button onClick={addTobasket}>Add to Basket</button>\r\n       </div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport './Home.css'; \r\nimport Product from './Product.js';\r\nimport SimpleImageSlider from 'react-simple-image-slider';\r\n\r\nfunction Home(){\r\n\t const images = [\r\n            { url: \"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Home_v2_en_US_1x._CB429090084_.jpg\" },\r\n            { url: \"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_45M_v2_1x._CB432458380_.jpg\" },\r\n            { url: \"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Sports_en_US_1x._CB431860448_.jpg\" },\r\n            { url: \"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Toys_en_US_1x._CB431858161_.jpg\" } \r\n        ];\r\n\treturn(\r\n\t\t<div className=\"home\">\r\n          <div className=\"home-container\">\r\n             <div className=\"home-image\">\r\n                <SimpleImageSlider\r\n                    width={1200}\r\n                    height={504}\r\n                   images={images}\r\n                />\r\n             </div>\r\n           <div className=\"home-row\">\r\n               <Product id=\"2031122\" title=\"gaming-console\" price={59} image=\"https://m.media-amazon.com/images/I/41kaOFDXzSL._AC_SY200_.jpg\"\r\n               rating={4.5}/>\r\n                <Product id=\"2031123\" title=\"headphones\" price={20.99} image=\"https://m.media-amazon.com/images/I/51HzG7dwAHL._AC_SY200_.jpg\"\r\n               rating={3}/>\r\n           </div>\r\n            <div className=\"home-row\">\r\n              <Product id=\"2031124\" title=\"How-to-influence-people\" price={4.99} image=\"https://images-na.ssl-images-amazon.com/images/I/718%2Bbq5ApRL._AC_SY220_.jpg\"\r\n               rating={4.5}/>\r\n               <Product id=\"2031125\" title=\"Alarm-clock\" price={15} image=\"https://m.media-amazon.com/images/I/41gT9mzRM8L._AC_SY200_.jpg\"\r\n               rating={4}/>\r\n               <Product id=\"2031127\" title=\"usb-cable\" price={5.99} image=\"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2019/July/amazonbasics_520x520._SY304_CB442725065_.jpg\"\r\n               rating={3.5}/>\r\n           </div>\r\n            <div className=\"home-row\">\r\n               <Product id=\"2031128\" title=\"alexa\" price={48.99} image=\"https://m.media-amazon.com/images/I/6182S7MYC2L._AC_UY218_.jpg\"\r\n               rating={4.9}/>\r\n             \r\n           </div>\r\n          </div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Home;","export const initialState = {\r\n    basket: [],\r\n\r\n};\r\n\r\nexport const getBasketTotal = (basket) =>\r\n    basket.reduce((amount, item) => item.price + amount, 0);\r\n\r\n\r\nconst reducer = (state, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case 'ADD-TO-BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item]\r\n            };\r\n        case 'Remove-basket':\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            );\r\n            let newBasket = [...state.basket];\r\n            if (index >= 0) {\r\n                newBasket.splice(index, 1);\r\n            } else {\r\n                console.warn(`can't remove an item ${action.id}`);\r\n            }\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n\r\n        case 'Set-user':\r\n            const email = action.user.email;\r\n            const name = email.split(\"@\", 1);\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                name: name,\r\n                email: email\r\n            }\r\n        case 'Empty_basket':\r\n            return {\r\n                ...state,\r\n                basket: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport './Subtotal.css';\r\nimport {useStateValue} from './Stateprovider';\r\nimport {getBasketTotal} from './reducer';\r\nimport  {BrowserRouter as Router,Link,Switch,Route,useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Subtotal(){\r\n\tconst history=useHistory();\r\n\tconst [{basket},dispatch]=useStateValue();\r\n    var sum=basket.reduce(function(a,b){\r\n\treturn a+b.price; \r\n},0);\r\n\r\n\treturn(\r\n       <div className=\"subtotal\"> \r\n           <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              {/* Part of the homework */}\r\n              Subtotal ({basket.length} items): <strong>{sum}</strong>\r\n            </p>\r\n            <small className=\"subtotal__gift\">\r\n              <input type=\"checkbox\" /> This order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getBasketTotal(basket)} // Part of the homework\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n      <button onClick={e=>history.push('/Payment')}>Proceed to Checkout</button>\r\n       </div>\r\n\t\t)\r\n}\r\n\r\nexport default Subtotal;","import React from 'react';\r\nimport './Checkout.css';\r\nimport Subtotal from './Subtotal.js';\r\nimport {useStateValue} from './Stateprovider';\r\nimport StarRatings from 'react-star-ratings';\r\nimport CheckoutProd from './CheckoutProd';\r\n\r\n\r\nfunction Checkout(){\r\n\treturn(\r\n        <div className=\"checkout\">\r\n          <div className=\"checkout-left\">\r\n             <img className=\"checkout-ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Computers_1x._CB432469755_.jpg\" alt=\"\"/>\r\n          <div className=\"checkout-title\">Your shopping Basket\r\n          </div>\r\n             <CheckoutProd/>\r\n          </div>\r\n          <div className=\"checkout-right\"> \r\n             <Subtotal/>\r\n          </div>\r\n        </div>\r\n\t\t)\r\n}\r\n\r\nexport default Checkout;","import React,{useEffect} from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport {refreshTokenSetup} from './RefreshTokenup.js';\r\nimport  {BrowserRouter as Router,Link,Switch,Route,useHistory} from 'react-router-dom';\r\nimport {useStateValue} from './Stateprovider.js';\r\nimport {auth} from './firebase';\r\n\r\nconst clientId=\"889550157625-vrj66msd63id05a4oolov7hgtdhgijae.apps.googleusercontent.com\";\r\n\r\nfunction GoogleLogIn(){\r\n   const [{user},dispatch]=useStateValue();\r\n\tconst history=useHistory();\r\n\tconst onSuccess=(res)=>{\r\n\t\t    dispatch({\r\n\t    \ttype:'Set-user',\r\n\t    \tuser:res.profileObj\r\n\t    })\r\n\t\thistory.push('/');\r\n\t    refreshTokenSetup(res);\r\n\t    user=res.profileObj.name;\r\n\t };\r\n\tconst onFailure=(res)=>{\r\n\t\tconsole.log('[Login Failed] res',res);\r\n\t\twindow.location.reload('/Login');\r\n\t};\r\n\r\n\treturn(\r\n       <div>\r\n         <GoogleLogin \r\n           clientId={clientId}\r\n           buttobText=\"Login With Google\"\r\n           onSuccess={onSuccess}\r\n           onFailure={onFailure}\r\n           cookiePolicy={'single_host_origin'}\r\n           style={{marginTop:'100px'}}\r\n           isSignedIn={true}\r\n           />\r\n       </div> \r\n\t\t)\r\n}\r\n\r\nexport default GoogleLogIn;\r\n","export const refreshTokenSetup = (res) => {\r\n  // Timing to renew access token\r\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n  const refreshToken = async () => {\r\n    const newAuthRes = await res.reloadAuthResponse();\r\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n    console.log('newAuthRes:', newAuthRes);\r\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    localStorage.setItem('authToken', newAuthRes.id_token);\r\n\r\n    // Setup the other timer after the first one\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };\r\n\r\n  // Setup first refresh timer\r\n  setTimeout(refreshToken, refreshTiming);\r\n};","import React from 'react';\r\nimport './Login.css'\r\nimport  {BrowserRouter as Router,Link,Switch,Route,useHistory} from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport {auth,signInWithGoogle} from './firebase'; \r\nimport GoogleLogIn from './GoogleLogin.js';\r\nimport {useStateValue} from './Stateprovider';\r\n\r\n\r\nfunction Login(){\r\n\tconst history=useHistory();\r\n\tconst [email,setEmail]=useState('');\r\n\tconst [password,setPassword]=useState('');\r\n    const [{user},dispatch]=useStateValue();\r\n    \r\n    \r\n\r\n\tconst signin=e=>{\r\n\t\te.preventDefault();\r\n\r\n\t\tauth\r\n\t\t.signInWithEmailAndPassword(email,password)\r\n\t\t.then(auth=>{\r\n\t\t\tif(auth){\r\n\t\t\thistory.push('/');\r\n          }\r\n\t\t})\r\n\t\t.catch(error=>alert(error.message))\r\n\t\t}\r\n\tconst register=e=>{\r\n\t\te.preventDefault();\r\n\t\tauth\r\n\t\t.createUserWithEmailAndPassword(email,password)\r\n\t    .then((auth)=>{\r\n\t    \tif(auth){\r\n\t    \t\thistory.push('/');\r\n\t    \t}\r\n\t    })\r\n\t    .catch(error=>alert(error.message))\r\n\t}\r\n     return(\r\n        <div className=\"login\">\r\n         <Link to='/'>\t\r\n           <img className=\"login-logo\" src=\"https://i.pinimg.com/originals/08/5f/d8/085fd8f7819dee3b716da73d3b2de61c.jpg\" alt=\"\"/>\r\n          </Link> \r\n          <form>\r\n          <div className=\"login-container\"> \r\n            <h2>Sign In</h2>\r\n            <small>Email</small>\r\n            <input type=\"email\" value={email} onChange={e=>setEmail(e.target.value)} placeholder=\"Enter your email\"/>\r\n            <small>Password</small>\r\n            <input type=\"password\" value={password} onChange={e=>setPassword(e.target.value)} placeholder=\"Enter your password\" />\r\n           <button onClick={signin}>Login</button>\r\n            <small>If you don't have an account?</small>\r\n            <button type=\"submit\" onClick={register} className=\"create-acc\">Create account</button>\r\n            <GoogleLogIn/>\r\n          </div>  \r\n           </form> \r\n        </div>\r\n     \t)\r\n}\r\n\r\nexport default Login;","import axios from 'axios';\r\n\r\n\r\nconst instance=axios.create({\r\n    basURL:'https://us-central1-clone1-4e27e.cloudfunctions.net/api'//the api(cloud func) URL\r\n});\r\n\r\nexport default instance;\r\n\r\n//http://localhost:5001/clone1-4e27e/us-central1/api","import React, { useState, useEffect } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from './Stateprovider';\r\nimport CheckoutProd from './CheckoutProd.js';\r\nimport { BrowserRouter as Router, Link, Switch, Route, useHistory } from 'react-router-dom';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from './axios';\r\nimport {db} from './firebase';\r\n\r\nfunction Payment() {\r\n    const [{ basket, user, name }, dispatch] = useStateValue();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    var sum = basket.reduce(function(a, b) {\r\n        return a + b.price;\r\n    }, 0);\r\n\r\n    const history = useHistory();\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setdisabled] = useState(true);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async() => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `https://us-central1-clone1-4e27e.cloudfunctions.net/api/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n   \r\n\r\n    const handleSubmit = async(event) => {\r\n        // do all the fancy stripe stuff...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent = payment confirmation\r\n       \r\n            db\r\n              .collection('users')\r\n              .doc(user?.email)\r\n              .collection('orders')\r\n              .doc(paymentIntent.id)\r\n              .set({\r\n                  basket: basket,\r\n                  amount: paymentIntent.amount,\r\n                  created: paymentIntent.created\r\n              });\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: 'Empty_basket'\r\n            })\r\n\r\n            history.replace('/orders');\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setdisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n \r\n    return ( \r\n    \t<div className = \"payment\" >\r\n            <div className = \"payment-container\" >\r\n             <h1 >Checkout { < Link to = \"/checkout\" > ({ basket.length }\r\n                    items) < /Link>} \r\n             </h1>\r\n              <div className = \"payment-section\" >\r\n                    <div className = \"payment-title\" >\r\n                      <h3> Delivery address </h3> \r\n                    </div>\r\n                   <div className = \"del-add\" >\r\n                    <p> <label> Email: {\r\n                        (user) ? user.email : 'Guest'\r\n                    } </label>\r\n                    </p>\r\n                    <p> <label > Address: 123, Paradise Apt. </label>\r\n                    </p>\r\n                    <p> Bandra, Mumbai - 23445 </p>\r\n                     </div>\r\n                   </div>\r\n                   <div className = \"payment-section\" >\r\n                     <div className = \"payment-title\" >\r\n                       <h3 > Review Items to deliver </h3> \r\n                       </div>\r\n                      <div className = \"payment-items\" >\r\n                         <CheckoutProd/>\r\n                      </div> \r\n                   </div> \r\n                   <div className = \"payment-section\" >\r\n                     <div className = \"payment-title\" >\r\n                      <h3> Payment method </h3>\r\n                       </div>\r\n                    <div className = \"payment-method\" >\r\n                      <form onClick = { handleSubmit } >\r\n                        <CardElement onChange = { handleChange }/> \r\n                        <div className = \"payment-price\" >\r\n                    <CurrencyFormat\r\n                      renderText = {\r\n                    (value) => ( <\r\n                        >\r\n                        <\r\n                        p >\r\n                        <\r\n                        strong > Order Total({ basket.length }\r\n                            items): < strong > { sum } < /strong></strong >\r\n                        <\r\n                        /p> < / >\r\n                    )\r\n                }\r\n                decimalScale = { 2 }\r\n                value = { getBasketTotal(basket) }\r\n                displayType = { \"text\" }\r\n                thousandSeparator = { true }\r\n                prefix = { \"$\" }\r\n                /> \r\n                <button disabled = { processing || disabled || succeeded } >\r\n                    <span > {\r\n                        processing ? < p > Processing < /p>:'Buy Now'}</span>\r\n                </button>\r\n                 < /div >\r\n\r\n                    {\r\n                            error && < div > { error } < /div>} < /\r\n                            form > <\r\n                            /div> < /\r\n                            div > <\r\n                            /div>  < /\r\n                            div >\r\n                           \r\n                        )\r\n                    }\r\n\r\n                export default Payment;","import React, { useEffect } from 'react';\nimport Header from './Header.js'\nimport Home from './Home.js'\nimport './App.css';\nimport { auth } from './firebase';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport Checkout from './Checkout.js';\nimport Login from './Login.js';\nimport { useStateValue } from './Stateprovider.js';\nimport Payment from './Payment.js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Orders from './orders';\n\n\nconst Promise = loadStripe('pk_test_51HUuljARgZFW9hkV5BlQCzMc3V2noTXoYWOcr20gRvakltS1BMIW41z1t9uVJYAHvCSFlQUcVXLPlBp3iQw5Boca00V1CmsNtR');\n\nfunction App() {\n    const [{}, dispatch] = useStateValue();\n    useEffect(() => {\n        auth.onAuthStateChanged((authUser) => {\n\n            if (authUser) {\n                dispatch({\n                    type: 'Set-user',\n                    user: authUser\n                });\n            }\n        });\n    }, []);\n\n\n    return (\n     < Router >\n        <div className = \"app\" >\n        <Switch >\n         <Route path = '/orders' >\n           <Header / >\n           <Orders / >\n        </Route >\n        <Route path = \"/Login\" >\n           <Login / >\n        </Route>\n        <Route path = \"/checkout\" >\n         { /*Header*/ } \n          <Header / > \n        { /*Checkout*/ } \n          <Checkout / >\n        </Route>\n        <Route path = \"/Payment\" > \n        { /*Header*/ }\n         <Header / > \n       { /*Payment*/ } \n           <Elements stripe = { Promise } >\n           <Payment / >\n           </Elements>\n       </Route > \n       <Route path = \"/\" > \n     { /*Header*/ } \n         <Header / > \n       { /*Home*/ }\n        <Home / >\n        </Route>\n         </Switch >\n      </div> \n     </Router >\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './Stateprovider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}